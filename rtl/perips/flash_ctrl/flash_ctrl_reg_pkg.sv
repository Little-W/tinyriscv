// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package flash_ctrl_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 4;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    struct packed {
      logic        q;
      logic        qe;
    } start;
    struct packed {
      logic [1:0]  q;
      logic        qe;
    } op_mode;
    struct packed {
      logic        q;
      logic        qe;
    } sw_ctrl;
    struct packed {
      logic        q;
      logic        qe;
    } program_init;
    struct packed {
      logic        q;
      logic        qe;
    } write_error;
    struct packed {
      logic [25:0] q;
      logic        qe;
    } reserved;
  } flash_ctrl_reg2hw_ctrl_reg_t;

  typedef struct packed {
    struct packed {
      logic [22:0] q;
    } rw_address;
    struct packed {
      logic [8:0]  q;
    } reserved;
  } flash_ctrl_reg2hw_addr_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } flash_ctrl_reg2hw_data_reg_t;

  typedef struct packed {
    struct packed {
      logic        d;
      logic        de;
    } start;
    struct packed {
      logic [1:0]  d;
      logic        de;
    } op_mode;
    struct packed {
      logic        d;
      logic        de;
    } sw_ctrl;
    struct packed {
      logic        d;
      logic        de;
    } program_init;
    struct packed {
      logic        d;
      logic        de;
    } write_error;
    struct packed {
      logic [25:0] d;
      logic        de;
    } reserved;
  } flash_ctrl_hw2reg_ctrl_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } flash_ctrl_hw2reg_data_reg_t;

  // Register -> HW type
  typedef struct packed {
    flash_ctrl_reg2hw_ctrl_reg_t ctrl; // [101:64]
    flash_ctrl_reg2hw_addr_reg_t addr; // [63:32]
    flash_ctrl_reg2hw_data_reg_t data; // [31:0]
  } flash_ctrl_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    flash_ctrl_hw2reg_ctrl_reg_t ctrl; // [70:33]
    flash_ctrl_hw2reg_data_reg_t data; // [32:0]
  } flash_ctrl_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] FLASH_CTRL_CTRL_OFFSET = 4'h0;
  parameter logic [BlockAw-1:0] FLASH_CTRL_ADDR_OFFSET = 4'h4;
  parameter logic [BlockAw-1:0] FLASH_CTRL_DATA_OFFSET = 4'h8;

  // Register index
  typedef enum int {
    FLASH_CTRL_CTRL,
    FLASH_CTRL_ADDR,
    FLASH_CTRL_DATA
  } flash_ctrl_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] FLASH_CTRL_PERMIT [3] = '{
    4'b1111, // index[0] FLASH_CTRL_CTRL
    4'b1111, // index[1] FLASH_CTRL_ADDR
    4'b1111  // index[2] FLASH_CTRL_DATA
  };

endpackage

